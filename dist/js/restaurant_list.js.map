{"version":3,"sources":["dbhelper.js","main.js","sw_register.js","idb.js","lozad.js"],"names":["DBHelper","DATABASE_URL","RESTAURANT_URL","this","REVIEW_URL","DB_NAME","RESTAURANT_STORE_NAME","REVIEW_STORE_NAME","DB_VER","[object Object]","idb","open","upgradeDb","createObjectStore","keyPath","createIndex","callback","getDb","then","db","transaction","objectStore","getAll","restaurants","length","fetch","response","status","json","store","map","r","put","catch","e","id","restaurant","find","reviews","filter","review","restaurant_id","method","body","JSON","stringify","syncStatus","createRestaurantReviewDB","isFavorite","is_favorite","state","setFavoriteRestaurantDB","index","keyRangeValue","IDBKeyRange","only","openCursor","cursor","updateData","value","update","cuisine","fetchRestaurants","error","results","cuisine_type","neighborhood","neighborhoods","v","i","uniqueNeighborhoods","indexOf","cuisines","uniqueCuisines","photograph","google","maps","Marker","position","latlng","title","name","url","urlForRestaurant","animation","Animation","DROP","markers","document","addEventListener","event","fetchNeighborhoods","fetchCuisines","console","self","fillNeighborhoodsHTML","select","getElementById","forEach","option","createElement","innerHTML","append","fillCuisinesHTML","window","initMap","Map","zoom","center","lat","lng","scrollwheel","updateRestaurants","cSelect","nSelect","cIndex","selectedIndex","nIndex","fetchRestaurantByCuisineAndNeighborhood","resetRestaurants","fillRestaurantsHTML","lozad","observe","log","m","setMap","ul","createRestaurantHTML","addMarkersToMap","li","image","className","setAttribute","imageUrlForRestaurant","alt","address","more","href","favorite","tabIndex","classList","add","setFavoriteRestaurant","target","remove","marker","mapMarkerForRestaurant","addListener","location","push","navigator","serviceWorker","register","registration","promisifyRequest","request","Promise","resolve","reject","onsuccess","result","onerror","promisifyRequestCall","obj","args","p","apply","proxyProperties","ProxyClass","targetProp","properties","prop","Object","defineProperty","prototype","get","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","Cursor","Index","_index","_cursor","_request","ObjectStore","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","oldVersion","_db","DB","IDBIndex","IDBCursor","methodName","IDBObjectStore","IDBTransaction","IDBDatabase","funcName","replace","arr","Array","slice","call","nativeObject","query","count","instance","items","iterateCursor","undefined","continue","exp","version","upgradeCallback","indexedDB","onupgradeneeded","delete","module","exports","default","global","factory","define","amd","_extends","assign","source","key","hasOwnProperty","isIE","documentMode","defaultConfig","rootMargin","threshold","load","element","nodeName","toLowerCase","img","getAttribute","src","appendChild","srcset","style","backgroundImage","loaded","markAsLoaded","isLoaded","selector","options","_defaultConfig$option","observer","IntersectionObserver","entries","entry","intersectionRatio","unobserve","onIntersection","elements","Element","NodeList","querySelectorAll","getElements","triggerLoad"],"mappings":"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","file":"restaurant_list.js","sourcesContent":["/**\r\n * Common database helper functions.\r\n */\r\nclass DBHelper {\r\n\r\n  /**\r\n   * Database URL.\r\n   * Change this to restaurants.json file location on your server.\r\n   */\r\n  static get DATABASE_URL() {\r\n    const port = 1337 // Change this to your server port\r\n    return `http://localhost:${port}/`;\r\n  }\r\n\r\n  static get RESTAURANT_URL() {\r\n\t\treturn `${this.DATABASE_URL}restaurants/`;\r\n\t}\r\n\r\n\tstatic get REVIEW_URL() {\r\n\t\treturn `${this.DATABASE_URL}reviews/`;\r\n\t}\r\n\r\n  static get DB_NAME() {\r\n    return 'mws-rr';\r\n  }\r\n\r\n  static get RESTAURANT_STORE_NAME() {\r\n    return 'restaurants';\r\n  }\r\n\r\n  static get REVIEW_STORE_NAME() {\r\n    return 'reviews';\r\n  }\r\n\r\n  static get DB_VER() {\r\n    return 2;\r\n  }\r\n\r\n  static getDb() {\r\n    return idb.open(DBHelper.DB_NAME, DBHelper.DB_VER, upgradeDb => {\r\n      const restaurantStore = upgradeDb.createObjectStore(DBHelper.RESTAURANT_STORE_NAME, {\r\n        keyPath: 'id'\r\n      });\r\n      restaurantStore.createIndex('by-id', 'id');\r\n\r\n      const reviewStore = upgradeDb.createObjectStore(DBHelper.REVIEW_STORE_NAME, {\r\n        keyPath: 'id'\r\n      });\r\n      reviewStore.createIndex('by-id', 'id');\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch all restaurants.\r\n   */\r\n  static fetchRestaurants(callback) {\r\n    DBHelper.getDb()\r\n    .then(db => {\r\n      if (!db) return;\r\n\r\n      return db\r\n        .transaction(DBHelper.RESTAURANT_STORE_NAME)\r\n        .objectStore(DBHelper.RESTAURANT_STORE_NAME)\r\n        .getAll();\r\n    })\r\n    .then(restaurants => {\r\n      if (restaurants && restaurants.length > 0) {\r\n        return callback(null, restaurants);\r\n      } else {\r\n        fetch(DBHelper.RESTAURANT_URL)\r\n        .then(response => {\r\n          const status = response.status\r\n          if (status !== 200){\r\n            const error = (`Request failed. Returned status of ${status}`);\r\n            return callback(error, null);\r\n          }\r\n\r\n          return response.json().then(restaurants => {\r\n            DBHelper.getDb().then(db => {\r\n              if (!db) return;\r\n\r\n              const store = db\r\n                .transaction(DBHelper.RESTAURANT_STORE_NAME, 'readwrite')\r\n                .objectStore(DBHelper.RESTAURANT_STORE_NAME);\r\n\r\n              restaurants.map(r => {\r\n                store.put(r)});\r\n            });\r\n            callback(null, restaurants);\r\n          })\r\n        })\r\n        .catch(e => {\r\n          const error = (`Request failed with error: ${e}`);\r\n          callback(error, null);\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Fetch a restaurant by its ID.\r\n   */\r\n  static fetchRestaurantById(id, callback) {\r\n    DBHelper.getDb()\r\n    .then(db => {\r\n      if (!db) return;\r\n\r\n      return db\r\n        .transaction(DBHelper.RESTAURANT_STORE_NAME)\r\n        .objectStore(DBHelper.RESTAURANT_STORE_NAME)\r\n        .getAll();\r\n    })\r\n    .then(restaurants => {\r\n      restaurant = restaurants.find(restaurant => restaurant.id == id);\r\n\r\n      if (restaurant){ \r\n        return callback(null, restaurant);\r\n      } else {\r\n        fetch(`${DBHelper.RESTAURANT_URL}${id}`)\r\n        .then(response => {\r\n          const status = response.status;\r\n          if (status === 404){\r\n            return callback('Restaurant does not exist', null);\r\n          }\r\n\r\n          if (status !== 200){\r\n            return callback('`Request failed. Returned status of ${status}`', null);\r\n          }\r\n\r\n          return response.json().then(restaurant => {\r\n            callback(null, restaurant);\r\n          })\r\n        })\r\n        .catch(e => {\r\n          const error = (`Request failed with error: ${e}`);\r\n          callback(error, null);     \r\n        })\r\n      }\r\n    }) \r\n  }\r\n\r\n  static fetchReviewsByRestaurantId(id, callback) {\r\n    DBHelper.getDb()\r\n    .then(db => {\r\n      if (!db) return;\r\n\r\n      return db\r\n        .transaction(DBHelper.REVIEW_STORE_NAME)\r\n        .objectStore(DBHelper.REVIEW_STORE_NAME)\r\n        .getAll();\r\n\r\n    })\r\n    .then(reviews => {\r\n      reviews = reviews.filter(review => review.restaurant_id === id);\r\n\r\n      if (reviews && reviews.length > 0){ \r\n        return callback(null, reviews);\r\n      } else {\r\n        fetch(`${DBHelper.REVIEW_URL}?restaurant_id=${id}`)\r\n        .then(response => {\r\n          const status = response.status;\r\n          if (status === 404){\r\n            return callback('Restaurant does not exist', null);\r\n          }\r\n\r\n          if (status !== 200){\r\n            return callback('`Request failed. Returned status of ${status}`', null);\r\n          }\r\n\r\n          return response.json().then(reviews => {\r\n            DBHelper.getDb().then(db => {\r\n              if (!db) return;\r\n\r\n              const store = db\r\n                .transaction(DBHelper.REVIEW_STORE_NAME, 'readwrite')\r\n                .objectStore(DBHelper.REVIEW_STORE_NAME);\r\n\r\n              reviews.map(r => store.put(r));\r\n            });\r\n            callback(null, reviews);\r\n          })\r\n        })\r\n        .catch(e => {\r\n          const error = (`Request failed with error: ${e}`);\r\n          callback(error, null);     \r\n        })\r\n      }\r\n    })\r\n  } \r\n\r\n  static createRestaurantReview(review){\r\n    if (!review) return;\r\n\r\n    fetch(`${DBHelper.REVIEW_URL}`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(review)\r\n    })\r\n    .then(response =>{\r\n      if (response.status != 201){\r\n        review.syncStatus = 'Pending';\r\n      } else {\r\n        review.syncStatus = 'Success';\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(review =>{\r\n      this.createRestaurantReviewDB(review);\r\n    })\r\n  }\r\n\r\n  static createRestaurantReviewDB(review) {\r\n    DBHelper.getDb().then(db => {\r\n      if (!db) return;\r\n\r\n        const store = db\r\n        .transaction(DBHelper.REVIEW_STORE_NAME, 'readwrite')\r\n        .objectStore(DBHelper.REVIEW_STORE_NAME);\r\n\r\n        store.put(review);\r\n      });\r\n  }\r\n\r\n  static setFavoriteRestaurant(id, isFavorite){\r\n    if (!id) return;\r\n    restaurant.is_favorite = state;\r\n    fetch(`${DBHelper.RESTAURANT_URL}${id}/?is_favorite=${isFavorite}`, {\r\n      method: 'PUT'\r\n    })\r\n    .then(response =>{\r\n      let syncStatus = 'Pending';\r\n      if (response.status == 200){\r\n        syncStatus = 'Success';\r\n      }\r\n      DBHelper.setFavoriteRestaurantDB(id, isFavorite, syncStatus);\r\n    })\r\n  }\r\n\r\n  static setFavoriteRestaurantDB(id, isFavorite, syncStatus){\r\n    DBHelper.getDb().then(db => {\r\n      if (!db) return;\r\n\r\n      const index = db\r\n      .transaction(DBHelper.RESTAURANT_STORE_NAME, 'readwrite')\r\n      .objectStore(DBHelper.RESTAURANT_STORE_NAME)\r\n      .index('by-id');\r\n\r\n      let keyRangeValue = IDBKeyRange.only(id);\r\n      index.openCursor(keyRangeValue)\r\n      .then(cursor => {\r\n        if (cursor){\r\n          let updateData = cursor.value;\r\n          updateData.is_favorite = isFavorite;\r\n          updateData.syncStatus = syncStatus;\r\n          cursor.update(updateData);\r\n        }\r\n      })\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch restaurants by a cuisine type with proper error handling.\r\n   */\r\n  static fetchRestaurantByCuisine(cuisine, callback) {\r\n    // Fetch all restaurants  with proper error handling\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Filter restaurants to have only given cuisine type\r\n        const results = restaurants.filter(r => r.cuisine_type == cuisine);\r\n        callback(null, results);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch restaurants by a neighborhood with proper error handling.\r\n   */\r\n  static fetchRestaurantByNeighborhood(neighborhood, callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Filter restaurants to have only given neighborhood\r\n        const results = restaurants.filter(r => r.neighborhood == neighborhood);\r\n        callback(null, results);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch restaurants by a cuisine and a neighborhood with proper error handling.\r\n   */\r\n  static fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        let results = restaurants\r\n        if (cuisine != 'all') { // filter by cuisine\r\n          results = results.filter(r => r.cuisine_type == cuisine);\r\n        }\r\n        if (neighborhood != 'all') { // filter by neighborhood\r\n          results = results.filter(r => r.neighborhood == neighborhood);\r\n        }\r\n        callback(null, results);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch all neighborhoods with proper error handling.\r\n   */\r\n  static fetchNeighborhoods(callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Get all neighborhoods from all restaurants\r\n        const neighborhoods = restaurants.map((v, i) => restaurants[i].neighborhood)\r\n        // Remove duplicates from neighborhoods\r\n        const uniqueNeighborhoods = neighborhoods.filter((v, i) => neighborhoods.indexOf(v) == i)\r\n        callback(null, uniqueNeighborhoods);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch all cuisines with proper error handling.\r\n   */\r\n  static fetchCuisines(callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Get all cuisines from all restaurants\r\n        const cuisines = restaurants.map((v, i) => restaurants[i].cuisine_type)\r\n        // Remove duplicates from cuisines\r\n        const uniqueCuisines = cuisines.filter((v, i) => cuisines.indexOf(v) == i)\r\n        callback(null, uniqueCuisines);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Restaurant page URL.\r\n   */\r\n  static urlForRestaurant(restaurant) {\r\n    return (`./restaurant.html?id=${restaurant.id}`);\r\n  }\r\n\r\n  /**\r\n   * Restaurant image URL.\r\n   */\r\n  static imageUrlForRestaurant(restaurant) {\r\n    return restaurant.photograph ? `img/${restaurant.photograph}.webp` : `img/no_image_available.svg`;\r\n  }\r\n\r\n  /**\r\n   * Map marker for a restaurant.\r\n   */\r\n  static mapMarkerForRestaurant(restaurant, map) {\r\n    const marker = new google.maps.Marker({\r\n      position: restaurant.latlng,\r\n      title: restaurant.name,\r\n      url: DBHelper.urlForRestaurant(restaurant),\r\n      map: map,\r\n      animation: google.maps.Animation.DROP}\r\n    );\r\n    return marker;\r\n  }\r\n\r\n}\r\n","let restaurants,\r\n  neighborhoods,\r\n  cuisines\r\nvar map\r\nvar markers = []\r\n\r\n/**\r\n * Fetch neighborhoods and cuisines as soon as the page is loaded.\r\n */\r\ndocument.addEventListener('DOMContentLoaded', (event) => {\r\n  fetchNeighborhoods();\r\n  fetchCuisines();\r\n});\r\n\r\n/**\r\n * Fetch all neighborhoods and set their HTML.\r\n */\r\nfetchNeighborhoods = () => {\r\n  DBHelper.fetchNeighborhoods((error, neighborhoods) => {\r\n    if (error) { // Got an error\r\n      console.error(error);\r\n    } else {\r\n      self.neighborhoods = neighborhoods;\r\n      fillNeighborhoodsHTML();\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Set neighborhoods HTML.\r\n */\r\nfillNeighborhoodsHTML = (neighborhoods = self.neighborhoods) => {\r\n  const select = document.getElementById('neighborhoods-select');\r\n  neighborhoods.forEach(neighborhood => {\r\n    const option = document.createElement('option');\r\n    option.innerHTML = neighborhood;\r\n    option.value = neighborhood;\r\n    select.append(option);\r\n  });\r\n}\r\n\r\n/**\r\n * Fetch all cuisines and set their HTML.\r\n */\r\nfetchCuisines = () => {\r\n  DBHelper.fetchCuisines((error, cuisines) => {\r\n    if (error) { // Got an error!\r\n      console.error(error);\r\n    } else {\r\n      self.cuisines = cuisines;\r\n      fillCuisinesHTML();\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Set cuisines HTML.\r\n */\r\nfillCuisinesHTML = (cuisines = self.cuisines) => {\r\n  const select = document.getElementById('cuisines-select');\r\n\r\n  cuisines.forEach(cuisine => {\r\n    const option = document.createElement('option');\r\n    option.innerHTML = cuisine;\r\n    option.value = cuisine;\r\n    select.append(option);\r\n  });\r\n}\r\n\r\n/**\r\n * Initialize Google map, called from HTML.\r\n */\r\nwindow.initMap = () => {\r\n  let loc = {\r\n    lat: 40.722216,\r\n    lng: -73.987501\r\n  };\r\n  self.map = new google.maps.Map(document.getElementById('map'), {\r\n    zoom: 12,\r\n    center: loc,\r\n    scrollwheel: false\r\n  });\r\n  updateRestaurants();\r\n}\r\n\r\n/**\r\n * Update page and map for current restaurants.\r\n */\r\nupdateRestaurants = () => {\r\n  const cSelect = document.getElementById('cuisines-select');\r\n  const nSelect = document.getElementById('neighborhoods-select');\r\n\r\n  const cIndex = cSelect.selectedIndex;\r\n  const nIndex = nSelect.selectedIndex;\r\n\r\n  const cuisine = cSelect[cIndex].value;\r\n  const neighborhood = nSelect[nIndex].value;\r\n\r\n  DBHelper.fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, (error, restaurants) => {\r\n    if (error) { // Got an error!\r\n      console.error(error);\r\n    } else {\r\n      resetRestaurants(restaurants);\r\n      fillRestaurantsHTML();\r\n      \r\n      const observer = lozad();\r\n      observer.observe();\r\n      console.log(\"lozad initialized\");\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Clear current restaurants, their HTML and remove their map markers.\r\n */\r\nresetRestaurants = (restaurants) => {\r\n  // Remove all restaurants\r\n  self.restaurants = [];\r\n  const ul = document.getElementById('restaurants-list');\r\n  ul.innerHTML = '';\r\n\r\n  // Remove all map markers\r\n  self.markers.forEach(m => m.setMap(null));\r\n  self.markers = [];\r\n  self.restaurants = restaurants;\r\n}\r\n\r\n/**\r\n * Create all restaurants HTML and add them to the webpage.\r\n */\r\nfillRestaurantsHTML = (restaurants = self.restaurants) => {\r\n  const ul = document.getElementById('restaurants-list');\r\n  restaurants.forEach(restaurant => {\r\n    ul.append(createRestaurantHTML(restaurant));\r\n  });\r\n  addMarkersToMap();\r\n}\r\n\r\n/**\r\n * Create restaurant HTML.\r\n */\r\ncreateRestaurantHTML = (restaurant) => {\r\n  const li = document.createElement('li');\r\n\r\n  const image = document.createElement('img');\r\n  image.className = 'restaurant-img lozad';\r\n  image.setAttribute('data-src', DBHelper.imageUrlForRestaurant(restaurant));\r\n  image.alt = \"An image from the restaurant \" + restaurant.name;\r\n  li.append(image);\r\n\r\n  const name = document.createElement('h3');\r\n  name.innerHTML = restaurant.name;\r\n  li.append(name);\r\n\r\n  const neighborhood = document.createElement('p');\r\n  neighborhood.innerHTML = restaurant.neighborhood;\r\n  li.append(neighborhood);\r\n\r\n  const address = document.createElement('p');\r\n  address.innerHTML = restaurant.address;\r\n  li.append(address);\r\n\r\n  const more = document.createElement('a');\r\n  more.innerHTML = 'View Details';\r\n  more.href = DBHelper.urlForRestaurant(restaurant);\r\n  li.append(more)\r\n\r\n  const favorite = document.createElement('span');\r\n  favorite.innerHTML = '&#x272a;';\r\n  favorite.tabIndex = '0';\r\n  favorite.className = 'favorite-icon';\r\n  if (restaurant.is_favorite) favorite.classList.add('is-favorite');\r\n  favorite.addEventListener('click', event => {\r\n    let isFavorite = restaurant.is_favorite;\r\n    restaurant.is_favorite = !isFavorite;\r\n    setFavoriteRestaurant(event.target, restaurant.id, isFavorite);\r\n  });\r\n  li.append(favorite);\r\n\r\n\r\n  return li\r\n}\r\n\r\nsetFavoriteRestaurant = (target, id, isFavorite) => {\r\n  if (isFavorite)\r\n    target.classList.remove('is-favorite');\r\n  else\r\n    target.classList.add('is-favorite');\r\n  \r\n  DBHelper.setFavoriteRestaurant(id, !isFavorite);\r\n};\r\n\r\n/**\r\n * Add markers for current restaurants to the map.\r\n */\r\naddMarkersToMap = (restaurants = self.restaurants) => {\r\n  restaurants.forEach(restaurant => {\r\n    // Add marker to the map\r\n    const marker = DBHelper.mapMarkerForRestaurant(restaurant, self.map);\r\n    google.maps.event.addListener(marker, 'click', () => {\r\n      window.location.href = marker.url\r\n    });\r\n    self.markers.push(marker);\r\n  });\r\n}","/**\r\n * Register service worker\r\n */\r\nif ('serviceWorker' in navigator) {\r\n    // Register a service worker hosted at the root of the\r\n    // site using the default scope.\r\n    navigator.serviceWorker.register('/sw.js').then(function(registration) {\r\n      console.log('Service worker registration succeeded:', registration);\r\n    }).catch(function(error) {\r\n      console.log('Service worker registration failed:', error);\r\n    });\r\n  } else {\r\n    console.log('Service workers are not supported.');\r\n  }\r\n  ","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","/*! lozad.js - v1.4.0 - 2018-04-22\n* https://github.com/ApoorvSaxena/lozad.js\n* Copyright (c) 2018 Apoorv Saxena; Licensed MIT */\n\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.lozad = factory());\n}(this, (function () { 'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/**\n * Detect IE browser\n * @const {boolean}\n * @private\n */\nvar isIE = document.documentMode;\n\nvar defaultConfig = {\n  rootMargin: '0px',\n  threshold: 0,\n  load: function load(element) {\n    if (element.nodeName.toLowerCase() === 'picture') {\n      var img = document.createElement('img');\n      if (isIE && element.getAttribute('data-iesrc')) {\n        img.src = element.getAttribute('data-iesrc');\n      }\n      element.appendChild(img);\n    }\n    if (element.getAttribute('data-src')) {\n      element.src = element.getAttribute('data-src');\n    }\n    if (element.getAttribute('data-srcset')) {\n      element.srcset = element.getAttribute('data-srcset');\n    }\n    if (element.getAttribute('data-background-image')) {\n      element.style.backgroundImage = 'url(\\'' + element.getAttribute('data-background-image') + '\\')';\n    }\n  },\n  loaded: function loaded() {}\n};\n\nfunction markAsLoaded(element) {\n  element.setAttribute('data-loaded', true);\n}\n\nvar isLoaded = function isLoaded(element) {\n  return element.getAttribute('data-loaded') === 'true';\n};\n\nvar onIntersection = function onIntersection(load, loaded) {\n  return function (entries, observer) {\n    entries.forEach(function (entry) {\n      if (entry.intersectionRatio > 0) {\n        observer.unobserve(entry.target);\n\n        if (!isLoaded(entry.target)) {\n          load(entry.target);\n          markAsLoaded(entry.target);\n          loaded(entry.target);\n        }\n      }\n    });\n  };\n};\n\nvar getElements = function getElements(selector) {\n  if (selector instanceof Element) {\n    return [selector];\n  }\n  if (selector instanceof NodeList) {\n    return selector;\n  }\n  return document.querySelectorAll(selector);\n};\n\nvar lozad = function () {\n  var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '.lozad';\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _defaultConfig$option = _extends({}, defaultConfig, options),\n      rootMargin = _defaultConfig$option.rootMargin,\n      threshold = _defaultConfig$option.threshold,\n      load = _defaultConfig$option.load,\n      loaded = _defaultConfig$option.loaded;\n\n  var observer = void 0;\n\n  if (window.IntersectionObserver) {\n    observer = new IntersectionObserver(onIntersection(load, loaded), {\n      rootMargin: rootMargin,\n      threshold: threshold\n    });\n  }\n\n  return {\n    observe: function observe() {\n      var elements = getElements(selector);\n\n      for (var i = 0; i < elements.length; i++) {\n        if (isLoaded(elements[i])) {\n          continue;\n        }\n        if (observer) {\n          observer.observe(elements[i]);\n          continue;\n        }\n        load(elements[i]);\n        markAsLoaded(elements[i]);\n        loaded(elements[i]);\n      }\n    },\n    triggerLoad: function triggerLoad(element) {\n      if (isLoaded(element)) {\n        return;\n      }\n\n      load(element);\n      markAsLoaded(element);\n      loaded(element);\n    }\n  };\n};\n\nreturn lozad;\n\n})));\n"]}
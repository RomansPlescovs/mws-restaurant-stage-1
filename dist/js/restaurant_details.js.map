{"version":3,"sources":["dbhelper.js","restaurant_info.js","sw_register.js","idb.js","lozad.js"],"names":["DBHelper","DATABASE_URL","RESTAURANT_URL","this","REVIEW_URL","DB_NAME","RESTAURANT_STORE_NAME","REVIEW_STORE_NAME","DB_VER","[object Object]","idb","open","upgradeDb","createObjectStore","keyPath","createIndex","callback","getDb","then","db","transaction","objectStore","getAll","restaurants","length","fetch","response","status","json","store","map","r","put","catch","e","id","restaurant","find","reviews","filter","review","restaurant_id","method","body","JSON","stringify","syncStatus","createRestaurantReviewDB","isFavorite","is_favorite","state","setFavoriteRestaurantDB","index","keyRangeValue","IDBKeyRange","only","openCursor","cursor","updateData","value","update","cuisine","fetchRestaurants","error","results","cuisine_type","neighborhood","neighborhoods","v","i","uniqueNeighborhoods","indexOf","cuisines","uniqueCuisines","photograph","google","maps","Marker","position","latlng","title","name","url","urlForRestaurant","animation","Animation","DROP","window","initMap","fetchRestaurantFromURL","console","self","Map","document","getElementById","zoom","center","scrollwheel","fillBreadcrumb","mapMarkerForRestaurant","getParameterByName","fetchRestaurantById","fillRestaurantHTML","lozad","observe","innerHTML","address","image","className","alt","setAttribute","imageUrlForRestaurant","operating_hours","fillRestaurantHoursHTML","fetchAndFillReviews","operatingHours","hours","key","row","createElement","day","appendChild","time","fillReviewsHTML","fetchReviewsByRestaurantId","container","noReviews","ul","forEach","createReviewHTML","li","header","classList","add","date","Date","createdAt","toLocaleDateString","rating","comments","submitReview","comment","reviewRrrorMessage","errorMessage","createRestaurantReview","breadcrumb","location","href","replace","RegExp","exec","decodeURIComponent","navigator","serviceWorker","register","registration","log","promisifyRequest","request","Promise","resolve","reject","onsuccess","result","onerror","promisifyRequestCall","obj","args","p","apply","proxyProperties","ProxyClass","targetProp","properties","prop","Object","defineProperty","prototype","get","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","Cursor","Index","_index","_cursor","_request","ObjectStore","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","oldVersion","_db","DB","IDBIndex","IDBCursor","methodName","IDBObjectStore","IDBTransaction","IDBDatabase","funcName","arr","Array","slice","call","nativeObject","query","count","instance","items","iterateCursor","push","undefined","continue","exp","version","upgradeCallback","indexedDB","onupgradeneeded","event","delete","module","exports","default","global","factory","define","amd","_extends","assign","target","source","hasOwnProperty","isIE","documentMode","defaultConfig","rootMargin","threshold","load","element","nodeName","toLowerCase","img","getAttribute","src","srcset","style","backgroundImage","loaded","markAsLoaded","isLoaded","selector","options","_defaultConfig$option","observer","IntersectionObserver","entries","entry","intersectionRatio","unobserve","onIntersection","elements","Element","NodeList","querySelectorAll","getElements","triggerLoad"],"mappings":"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","file":"restaurant_details.js","sourcesContent":["/**\r\n * Common database helper functions.\r\n */\r\nclass DBHelper {\r\n\r\n  /**\r\n   * Database URL.\r\n   * Change this to restaurants.json file location on your server.\r\n   */\r\n  static get DATABASE_URL() {\r\n    const port = 1337 // Change this to your server port\r\n    return `http://localhost:${port}/`;\r\n  }\r\n\r\n  static get RESTAURANT_URL() {\r\n\t\treturn `${this.DATABASE_URL}restaurants/`;\r\n\t}\r\n\r\n\tstatic get REVIEW_URL() {\r\n\t\treturn `${this.DATABASE_URL}reviews/`;\r\n\t}\r\n\r\n  static get DB_NAME() {\r\n    return 'mws-rr';\r\n  }\r\n\r\n  static get RESTAURANT_STORE_NAME() {\r\n    return 'restaurants';\r\n  }\r\n\r\n  static get REVIEW_STORE_NAME() {\r\n    return 'reviews';\r\n  }\r\n\r\n  static get DB_VER() {\r\n    return 2;\r\n  }\r\n\r\n  static getDb() {\r\n    return idb.open(DBHelper.DB_NAME, DBHelper.DB_VER, upgradeDb => {\r\n      const restaurantStore = upgradeDb.createObjectStore(DBHelper.RESTAURANT_STORE_NAME, {\r\n        keyPath: 'id'\r\n      });\r\n      restaurantStore.createIndex('by-id', 'id');\r\n\r\n      const reviewStore = upgradeDb.createObjectStore(DBHelper.REVIEW_STORE_NAME, {\r\n        keyPath: 'id'\r\n      });\r\n      reviewStore.createIndex('by-id', 'id');\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch all restaurants.\r\n   */\r\n  static fetchRestaurants(callback) {\r\n    DBHelper.getDb()\r\n    .then(db => {\r\n      if (!db) return;\r\n\r\n      return db\r\n        .transaction(DBHelper.RESTAURANT_STORE_NAME)\r\n        .objectStore(DBHelper.RESTAURANT_STORE_NAME)\r\n        .getAll();\r\n    })\r\n    .then(restaurants => {\r\n      if (restaurants && restaurants.length > 0) {\r\n        return callback(null, restaurants);\r\n      } else {\r\n        fetch(DBHelper.RESTAURANT_URL)\r\n        .then(response => {\r\n          const status = response.status\r\n          if (status !== 200){\r\n            const error = (`Request failed. Returned status of ${status}`);\r\n            return callback(error, null);\r\n          }\r\n\r\n          return response.json().then(restaurants => {\r\n            DBHelper.getDb().then(db => {\r\n              if (!db) return;\r\n\r\n              const store = db\r\n                .transaction(DBHelper.RESTAURANT_STORE_NAME, 'readwrite')\r\n                .objectStore(DBHelper.RESTAURANT_STORE_NAME);\r\n\r\n              restaurants.map(r => {\r\n                store.put(r)});\r\n            });\r\n            callback(null, restaurants);\r\n          })\r\n        })\r\n        .catch(e => {\r\n          const error = (`Request failed with error: ${e}`);\r\n          callback(error, null);\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Fetch a restaurant by its ID.\r\n   */\r\n  static fetchRestaurantById(id, callback) {\r\n    DBHelper.getDb()\r\n    .then(db => {\r\n      if (!db) return;\r\n\r\n      return db\r\n        .transaction(DBHelper.RESTAURANT_STORE_NAME)\r\n        .objectStore(DBHelper.RESTAURANT_STORE_NAME)\r\n        .getAll();\r\n    })\r\n    .then(restaurants => {\r\n      restaurant = restaurants.find(restaurant => restaurant.id == id);\r\n\r\n      if (restaurant){ \r\n        return callback(null, restaurant);\r\n      } else {\r\n        fetch(`${DBHelper.RESTAURANT_URL}${id}`)\r\n        .then(response => {\r\n          const status = response.status;\r\n          if (status === 404){\r\n            return callback('Restaurant does not exist', null);\r\n          }\r\n\r\n          if (status !== 200){\r\n            return callback('`Request failed. Returned status of ${status}`', null);\r\n          }\r\n\r\n          return response.json().then(restaurant => {\r\n            callback(null, restaurant);\r\n          })\r\n        })\r\n        .catch(e => {\r\n          const error = (`Request failed with error: ${e}`);\r\n          callback(error, null);     \r\n        })\r\n      }\r\n    }) \r\n  }\r\n\r\n  static fetchReviewsByRestaurantId(id, callback) {\r\n    DBHelper.getDb()\r\n    .then(db => {\r\n      if (!db) return;\r\n\r\n      return db\r\n        .transaction(DBHelper.REVIEW_STORE_NAME)\r\n        .objectStore(DBHelper.REVIEW_STORE_NAME)\r\n        .getAll();\r\n\r\n    })\r\n    .then(reviews => {\r\n      reviews = reviews.filter(review => review.restaurant_id === id);\r\n\r\n      if (reviews && reviews.length > 0){ \r\n        return callback(null, reviews);\r\n      } else {\r\n        fetch(`${DBHelper.REVIEW_URL}?restaurant_id=${id}`)\r\n        .then(response => {\r\n          const status = response.status;\r\n          if (status === 404){\r\n            return callback('Restaurant does not exist', null);\r\n          }\r\n\r\n          if (status !== 200){\r\n            return callback('`Request failed. Returned status of ${status}`', null);\r\n          }\r\n\r\n          return response.json().then(reviews => {\r\n            DBHelper.getDb().then(db => {\r\n              if (!db) return;\r\n\r\n              const store = db\r\n                .transaction(DBHelper.REVIEW_STORE_NAME, 'readwrite')\r\n                .objectStore(DBHelper.REVIEW_STORE_NAME);\r\n\r\n              reviews.map(r => store.put(r));\r\n            });\r\n            callback(null, reviews);\r\n          })\r\n        })\r\n        .catch(e => {\r\n          const error = (`Request failed with error: ${e}`);\r\n          callback(error, null);     \r\n        })\r\n      }\r\n    })\r\n  } \r\n\r\n  static createRestaurantReview(review){\r\n    if (!review) return;\r\n\r\n    fetch(`${DBHelper.REVIEW_URL}`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(review)\r\n    })\r\n    .then(response =>{\r\n      if (response.status != 201){\r\n        review.syncStatus = 'Pending';\r\n      } else {\r\n        review.syncStatus = 'Success';\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(review =>{\r\n      this.createRestaurantReviewDB(review);\r\n    })\r\n  }\r\n\r\n  static createRestaurantReviewDB(review) {\r\n    DBHelper.getDb().then(db => {\r\n      if (!db) return;\r\n\r\n        const store = db\r\n        .transaction(DBHelper.REVIEW_STORE_NAME, 'readwrite')\r\n        .objectStore(DBHelper.REVIEW_STORE_NAME);\r\n\r\n        store.put(review);\r\n      });\r\n  }\r\n\r\n  static setFavoriteRestaurant(id, isFavorite){\r\n    if (!id) return;\r\n    restaurant.is_favorite = state;\r\n    fetch(`${DBHelper.RESTAURANT_URL}${id}/?is_favorite=${isFavorite}`, {\r\n      method: 'PUT'\r\n    })\r\n    .then(response =>{\r\n      let syncStatus = 'Pending';\r\n      if (response.status == 200){\r\n        syncStatus = 'Success';\r\n      }\r\n      DBHelper.setFavoriteRestaurantDB(id, isFavorite, syncStatus);\r\n    })\r\n  }\r\n\r\n  static setFavoriteRestaurantDB(id, isFavorite, syncStatus){\r\n    DBHelper.getDb().then(db => {\r\n      if (!db) return;\r\n\r\n      const index = db\r\n      .transaction(DBHelper.RESTAURANT_STORE_NAME, 'readwrite')\r\n      .objectStore(DBHelper.RESTAURANT_STORE_NAME)\r\n      .index('by-id');\r\n\r\n      let keyRangeValue = IDBKeyRange.only(id);\r\n      index.openCursor(keyRangeValue)\r\n      .then(cursor => {\r\n        if (cursor){\r\n          let updateData = cursor.value;\r\n          updateData.is_favorite = isFavorite;\r\n          updateData.syncStatus = syncStatus;\r\n          cursor.update(updateData);\r\n        }\r\n      })\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch restaurants by a cuisine type with proper error handling.\r\n   */\r\n  static fetchRestaurantByCuisine(cuisine, callback) {\r\n    // Fetch all restaurants  with proper error handling\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Filter restaurants to have only given cuisine type\r\n        const results = restaurants.filter(r => r.cuisine_type == cuisine);\r\n        callback(null, results);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch restaurants by a neighborhood with proper error handling.\r\n   */\r\n  static fetchRestaurantByNeighborhood(neighborhood, callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Filter restaurants to have only given neighborhood\r\n        const results = restaurants.filter(r => r.neighborhood == neighborhood);\r\n        callback(null, results);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch restaurants by a cuisine and a neighborhood with proper error handling.\r\n   */\r\n  static fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        let results = restaurants\r\n        if (cuisine != 'all') { // filter by cuisine\r\n          results = results.filter(r => r.cuisine_type == cuisine);\r\n        }\r\n        if (neighborhood != 'all') { // filter by neighborhood\r\n          results = results.filter(r => r.neighborhood == neighborhood);\r\n        }\r\n        callback(null, results);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch all neighborhoods with proper error handling.\r\n   */\r\n  static fetchNeighborhoods(callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Get all neighborhoods from all restaurants\r\n        const neighborhoods = restaurants.map((v, i) => restaurants[i].neighborhood)\r\n        // Remove duplicates from neighborhoods\r\n        const uniqueNeighborhoods = neighborhoods.filter((v, i) => neighborhoods.indexOf(v) == i)\r\n        callback(null, uniqueNeighborhoods);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch all cuisines with proper error handling.\r\n   */\r\n  static fetchCuisines(callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Get all cuisines from all restaurants\r\n        const cuisines = restaurants.map((v, i) => restaurants[i].cuisine_type)\r\n        // Remove duplicates from cuisines\r\n        const uniqueCuisines = cuisines.filter((v, i) => cuisines.indexOf(v) == i)\r\n        callback(null, uniqueCuisines);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Restaurant page URL.\r\n   */\r\n  static urlForRestaurant(restaurant) {\r\n    return (`./restaurant.html?id=${restaurant.id}`);\r\n  }\r\n\r\n  /**\r\n   * Restaurant image URL.\r\n   */\r\n  static imageUrlForRestaurant(restaurant) {\r\n    return restaurant.photograph ? `img/${restaurant.photograph}.webp` : `img/no_image_available.svg`;\r\n  }\r\n\r\n  /**\r\n   * Map marker for a restaurant.\r\n   */\r\n  static mapMarkerForRestaurant(restaurant, map) {\r\n    const marker = new google.maps.Marker({\r\n      position: restaurant.latlng,\r\n      title: restaurant.name,\r\n      url: DBHelper.urlForRestaurant(restaurant),\r\n      map: map,\r\n      animation: google.maps.Animation.DROP}\r\n    );\r\n    return marker;\r\n  }\r\n\r\n}\r\n","let restaurant;\r\nvar map;\r\n\r\n/**\r\n * Initialize Google map, called from HTML.\r\n */\r\nwindow.initMap = () => {\r\n  fetchRestaurantFromURL((error, restaurant) => {\r\n    if (error) { // Got an error!\r\n      console.error(error);\r\n    } else {\r\n      self.map = new google.maps.Map(document.getElementById('map'), {\r\n        zoom: 16,\r\n        center: restaurant.latlng,\r\n        scrollwheel: false\r\n      });\r\n      fillBreadcrumb();\r\n      DBHelper.mapMarkerForRestaurant(self.restaurant, self.map);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Get current restaurant from page URL.\r\n */\r\nfetchRestaurantFromURL = (callback) => {\r\n  if (self.restaurant) { // restaurant already fetched!\r\n    callback(null, self.restaurant)\r\n    return;\r\n  }\r\n  const id = getParameterByName('id');\r\n  if (!id) { // no id found in URL\r\n    error = 'No restaurant id in URL'\r\n    callback(error, null);\r\n  } else {\r\n    DBHelper.fetchRestaurantById(id, (error, restaurant) => {\r\n      self.restaurant = restaurant;\r\n      if (!restaurant) {\r\n        console.error(error);\r\n        return;\r\n      }\r\n\r\n      fillRestaurantHTML();\r\n      const observer = lozad();\r\n      observer.observe();\r\n\r\n      callback(null, restaurant)\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Create restaurant HTML and add it to the webpage\r\n */\r\nfillRestaurantHTML = (restaurant = self.restaurant) => {\r\n  const name = document.getElementById('restaurant-name');\r\n  name.innerHTML = restaurant.name;\r\n\r\n  const address = document.getElementById('restaurant-address');\r\n  address.innerHTML = restaurant.address;\r\n\r\n  const image = document.getElementById('restaurant-img');\r\n  image.className = 'restaurant-img lozad';\r\n  image.alt = \"An image from the restaurant \" + restaurant.name;\r\n  image.setAttribute('data-src', DBHelper.imageUrlForRestaurant(restaurant));\r\n  \r\n  const cuisine = document.getElementById('restaurant-cuisine');\r\n  cuisine.innerHTML = restaurant.cuisine_type;\r\n\r\n  // fill operating hours\r\n  if (restaurant.operating_hours) {\r\n    fillRestaurantHoursHTML();\r\n  }\r\n  // fetch and fill reviews\r\n  fetchAndFillReviews();\r\n}\r\n\r\n/**\r\n * Create restaurant operating hours HTML table and add it to the webpage.\r\n */\r\nfillRestaurantHoursHTML = (operatingHours = self.restaurant.operating_hours) => {\r\n  const hours = document.getElementById('restaurant-hours');\r\n  for (let key in operatingHours) {\r\n    const row = document.createElement('tr');\r\n\r\n    const day = document.createElement('td');\r\n    day.innerHTML = key;\r\n    row.appendChild(day);\r\n\r\n    const time = document.createElement('td');\r\n    time.innerHTML = operatingHours[key];\r\n    row.appendChild(time);\r\n\r\n    hours.appendChild(row);\r\n  }\r\n}\r\n\r\n/**\r\n * Create all reviews HTML and add them to the webpage.\r\n */\r\nfetchAndFillReviews = (reviews = self.restaurant.reviews) => {\r\n  if(!reviews){\r\n    DBHelper.fetchReviewsByRestaurantId(self.restaurant.id, (error, reviews) => {\r\n      self.restaurant.reviews = reviews;\r\n      fillReviewsHTML();  \r\n    })\r\n  } else {\r\n    fillReviewsHTML();\r\n  }\r\n}\r\n\r\nfillReviewsHTML = (reviews = self.restaurant.reviews) => {\r\n  const container = document.getElementById('reviews-container');\r\n\r\n  if (!reviews) {\r\n    const noReviews = document.createElement('p');\r\n    noReviews.innerHTML = 'No reviews yet!';\r\n    container.appendChild(noReviews);\r\n    return;\r\n  }\r\n  const ul = document.getElementById('reviews-list');\r\n  reviews.forEach(review => {\r\n    ul.appendChild(createReviewHTML(review));\r\n  });\r\n  container.appendChild(ul);\r\n}\r\n\r\n/**\r\n * Create review HTML and add it to the webpage.\r\n */\r\ncreateReviewHTML = (review) => {\r\n  const li = document.createElement('li');\r\n  const header = document.createElement('h4');\r\n  header.classList.add(\"review-header\");\r\n  li.appendChild(header);\r\n\r\n  const name = document.createElement('p');\r\n  name.className = 'review-name';\r\n  name.innerHTML = review.name;\r\n  header.appendChild(name);\r\n\r\n  const date = document.createElement('p');\r\n  date.className = 'review-date';\r\n  date.innerHTML = new Date(review.createdAt).toLocaleDateString();\r\n  header.appendChild(date);\r\n\r\n  const rating = document.createElement('p');\r\n  rating.className = 'review-rating';\r\n  rating.innerHTML = `Rating: ${review.rating}`;\r\n  li.appendChild(rating);\r\n\r\n  const comments = document.createElement('p');\r\n  comments.innerHTML = review.comments;\r\n  li.appendChild(comments);\r\n\r\n  return li;\r\n}\r\n\r\nsubmitReview = () =>{\r\n  let name = document.getElementById('new-review-name');\r\n  let rating = document.getElementById('new-review-rating');\r\n  let comment = document.getElementById('new-review-comment');\r\n  let reviewRrrorMessage = document.getElementById('review-error-message');\r\n  let errorMessage = \"\";\r\n\r\n  if (!name.value)\r\n    errorMessage += \"Please provide your name<br>\";\r\n  if (!rating.value)\r\n    errorMessage += \"Please provide rating<br>\";\r\n  if (!comment.value)\r\n    errorMessage += \"Please provide comment<br>\";\r\n\r\n  if (errorMessage){\r\n    reviewRrrorMessage.innerHTML = errorMessage;\r\n    return;\r\n  }\r\n\r\n  review = {\r\n    restaurant_id: self.restaurant.id,\r\n    createdAt: new Date(),\r\n    name: name.value,\r\n    rating: rating.value,\r\n    comments: comment.value\r\n  };\r\n\r\n  DBHelper.createRestaurantReview(review);\r\n\r\n  name.value = '';\r\n  rating.value = '';\r\n  comment.value = '';\r\n\r\n  const ul = document.getElementById('reviews-list');\r\n  ul.appendChild(createReviewHTML(review));\r\n\r\n}\r\n\r\n/**\r\n * Add restaurant name to the breadcrumb navigation menu\r\n */\r\nfillBreadcrumb = (restaurant=self.restaurant) => {\r\n  const breadcrumb = document.getElementById('breadcrumb');\r\n  const li = document.createElement('li');\r\n  li.innerHTML = restaurant.name;\r\n  breadcrumb.appendChild(li);\r\n}\r\n\r\n/**\r\n * Get a parameter by name from page URL.\r\n */\r\ngetParameterByName = (name, url) => {\r\n  if (!url)\r\n    url = window.location.href;\r\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`),\r\n    results = regex.exec(url);\r\n  if (!results)\r\n    return null;\r\n  if (!results[2])\r\n    return '';\r\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n}","/**\r\n * Register service worker\r\n */\r\nif ('serviceWorker' in navigator) {\r\n    // Register a service worker hosted at the root of the\r\n    // site using the default scope.\r\n    navigator.serviceWorker.register('/sw.js').then(function(registration) {\r\n      console.log('Service worker registration succeeded:', registration);\r\n    }).catch(function(error) {\r\n      console.log('Service worker registration failed:', error);\r\n    });\r\n  } else {\r\n    console.log('Service workers are not supported.');\r\n  }\r\n  ","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","/*! lozad.js - v1.4.0 - 2018-04-22\n* https://github.com/ApoorvSaxena/lozad.js\n* Copyright (c) 2018 Apoorv Saxena; Licensed MIT */\n\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.lozad = factory());\n}(this, (function () { 'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/**\n * Detect IE browser\n * @const {boolean}\n * @private\n */\nvar isIE = document.documentMode;\n\nvar defaultConfig = {\n  rootMargin: '0px',\n  threshold: 0,\n  load: function load(element) {\n    if (element.nodeName.toLowerCase() === 'picture') {\n      var img = document.createElement('img');\n      if (isIE && element.getAttribute('data-iesrc')) {\n        img.src = element.getAttribute('data-iesrc');\n      }\n      element.appendChild(img);\n    }\n    if (element.getAttribute('data-src')) {\n      element.src = element.getAttribute('data-src');\n    }\n    if (element.getAttribute('data-srcset')) {\n      element.srcset = element.getAttribute('data-srcset');\n    }\n    if (element.getAttribute('data-background-image')) {\n      element.style.backgroundImage = 'url(\\'' + element.getAttribute('data-background-image') + '\\')';\n    }\n  },\n  loaded: function loaded() {}\n};\n\nfunction markAsLoaded(element) {\n  element.setAttribute('data-loaded', true);\n}\n\nvar isLoaded = function isLoaded(element) {\n  return element.getAttribute('data-loaded') === 'true';\n};\n\nvar onIntersection = function onIntersection(load, loaded) {\n  return function (entries, observer) {\n    entries.forEach(function (entry) {\n      if (entry.intersectionRatio > 0) {\n        observer.unobserve(entry.target);\n\n        if (!isLoaded(entry.target)) {\n          load(entry.target);\n          markAsLoaded(entry.target);\n          loaded(entry.target);\n        }\n      }\n    });\n  };\n};\n\nvar getElements = function getElements(selector) {\n  if (selector instanceof Element) {\n    return [selector];\n  }\n  if (selector instanceof NodeList) {\n    return selector;\n  }\n  return document.querySelectorAll(selector);\n};\n\nvar lozad = function () {\n  var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '.lozad';\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _defaultConfig$option = _extends({}, defaultConfig, options),\n      rootMargin = _defaultConfig$option.rootMargin,\n      threshold = _defaultConfig$option.threshold,\n      load = _defaultConfig$option.load,\n      loaded = _defaultConfig$option.loaded;\n\n  var observer = void 0;\n\n  if (window.IntersectionObserver) {\n    observer = new IntersectionObserver(onIntersection(load, loaded), {\n      rootMargin: rootMargin,\n      threshold: threshold\n    });\n  }\n\n  return {\n    observe: function observe() {\n      var elements = getElements(selector);\n\n      for (var i = 0; i < elements.length; i++) {\n        if (isLoaded(elements[i])) {\n          continue;\n        }\n        if (observer) {\n          observer.observe(elements[i]);\n          continue;\n        }\n        load(elements[i]);\n        markAsLoaded(elements[i]);\n        loaded(elements[i]);\n      }\n    },\n    triggerLoad: function triggerLoad(element) {\n      if (isLoaded(element)) {\n        return;\n      }\n\n      load(element);\n      markAsLoaded(element);\n      loaded(element);\n    }\n  };\n};\n\nreturn lozad;\n\n})));\n"]}
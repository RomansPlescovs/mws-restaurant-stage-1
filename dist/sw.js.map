{"version":3,"sources":["sw.js"],"names":["staticCacheName","filesToCache","self","addEventListener","event","waitUntil","caches","open","then","cache","addAll","console","log","keys","cacheNames","Promise","all","filter","cacheName","startsWith","map","delete","respondWith","match","request","response","fetch","requestUrl","URL","url","includes","method","pathname","put","clone"],"mappings":"AAAA,MAAMA,gBAAkB,iBACpBC,cACI,cACA,mBACA,yBACA,4BACA,SACA,kBACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAIRC,KAAKC,iBAAiB,UAAW,SAASC,GACtCA,EAAMC,UACFC,OAAOC,KAAKP,iBAAiBQ,KAAK,SAASC,GACvC,OAAOA,EAAMC,OAAOT,iBAG5BU,QAAQC,IAAI,6BAGhBV,KAAKC,iBAAiB,WAAY,SAASC,GACvCA,EAAMC,UACFC,OAAOO,OAAOL,KAAK,SAASM,GACxB,OAAOC,QAAQC,IACXF,EAAWG,OAAO,SAASC,GACvB,OAAOA,EAAUC,WAAW,iBAAmBD,IAAclB,kBAC9DoB,IAAI,SAASF,GAEZ,OADAP,QAAQC,IAAI,kBAAmBM,GACxBZ,OAAOe,OAAOH,WAOzChB,KAAKC,iBAAiB,QAAS,SAASC,GACpCA,EAAMkB,YACFhB,OAAOC,KAAKP,iBAAiBQ,KAAK,SAASC,GACvC,OAAOA,EAAMc,MAAMnB,EAAMoB,SAAShB,KAAK,SAAUiB,GAC7C,OAAOA,GAAYC,MAAMtB,EAAMoB,SAAShB,KAAK,SAASiB,GAClD,MAAME,EAAa,IAAIC,IAAIxB,EAAMoB,QAAQK,KAIzC,OAHM,OAAQ,OAAOC,SAAS1B,EAAMoB,QAAQO,SAAmC,MAAxBJ,EAAWK,UAC9DvB,EAAMwB,IAAI7B,EAAMoB,QAASC,EAASS,SAE/BT","file":"sw.js","sourcesContent":["const staticCacheName = 'restaurants-v1',\r\n    filesToCache = [\r\n        '/index.html',\r\n        '/restaurant.html',\r\n        '/js/restaurant_list.js',\r\n        '/js/restaurant_details.js',\r\n        '/sw.js',\r\n        '/css/styles.css',\r\n        '/img/1.webp',\r\n        '/img/2.webp',\r\n        '/img/3.webp',\r\n        '/img/4.webp',\r\n        '/img/5.webp',\r\n        '/img/6.webp',\r\n        '/img/7.webp',\r\n        '/img/8.webp',\r\n        '/img/9.webp',\r\n        '/img/10.webp'\r\n];\r\n\r\n\r\nself.addEventListener('install', function(event) {\r\n    event.waitUntil(\r\n        caches.open(staticCacheName).then(function(cache) {\r\n            return cache.addAll(filesToCache); \r\n        })\r\n    );\r\n    console.log(\"cached files on install\");\r\n});\r\n\r\nself.addEventListener('activate', function(event) {\r\n    event.waitUntil(\r\n        caches.keys().then(function(cacheNames) {\r\n            return Promise.all(\r\n                cacheNames.filter(function(cacheName) {\r\n                    return cacheName.startsWith('restaurants-') && cacheName !== staticCacheName;\r\n                }).map(function(cacheName) {\r\n                    console.log(\"deleted cache: \", cacheName);\r\n                    return caches.delete(cacheName);\r\n                })\r\n            );\r\n        })\r\n    );\r\n});\r\n\r\nself.addEventListener('fetch', function(event) {\r\n    event.respondWith(\r\n        caches.open(staticCacheName).then(function(cache) {\r\n            return cache.match(event.request).then(function (response) {\r\n                return response || fetch(event.request).then(function(response) {\r\n                    const requestUrl = new URL(event.request.url);\r\n                    if (![\"POST\", \"PUT\"].includes(event.request.method) && requestUrl.pathname !== \"/\") {\r\n                        cache.put(event.request, response.clone());\r\n                    }\r\n                    return response;\r\n                });\r\n            });\r\n        })\r\n    );\r\n});\r\n"]}